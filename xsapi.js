// Generated by CoffeeScript 1.6.2
(function() {
  "use strict";  window.xsapi = (function() {
    var _connect, _responseHandler, _serialize, _xmlrpc,
      _this = this;

    function xsapi(username, password, hosturl) {
      this.username = username;
      this.password = password;
      this.hosturl = hosturl;
      this.session;
    }

    _connect = function(username, password, hosturl, callback) {
      var fullHostURL;

      fullHostURL = 'http://' + hosturl + '/json';
      return _xmlrpc(fullHostURL, "session.login_with_password", [username, password], callback);
    };

    _serialize = function(result, element) {
      return result[0][element];
    };

    _responseHandler = function(status, response, callback) {
      var error, messageStatus, ret;

      if (status === "success") {
        messageStatus = _serialize(response, 'Status');
        if (messageStatus === "Success") {
          ret = _serialize(response, 'Value');
          return callback(null, ret);
        } else {
          error = "Failed to authenticate.";
          return callback(error);
        }
      } else {
        error = "Failed to connect to specified host.";
        return callback(error);
      }
    };

    _xmlrpc = function(url, method, params, callback) {
      if (params == null) {
        params = "[]";
      }
      return $.xmlrpc({
        url: url,
        methodName: method,
        params: params,
        success: function(response, status, jqXHR) {
          return _responseHandler(status, response, callback);
        },
        error: function(jqXHR, status, error) {
          return _responseHandler(status, error, callback);
        }
      });
    };

    xsapi.prototype.getSession = function(callback) {
      return _connect(this.username, this.password, this.hosturl, callback);
    };

    xsapi.prototype.getServerVersion = function(callback) {
      if ((this.username != null) && (this.password != null) && (this.hosturl != null)) {
        if (this.session != null) {
          return callback(null, "ready to go");
        } else {
          return callback(null, "Lets get a session first");
        }
      } else {
        return callback('No settings found, make sure you use init first.');
      }
    };

    return xsapi;

  }).call(this);

}).call(this);
